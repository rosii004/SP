Од стаднарден влез се читаат N низи од знаци (стрингови) не подолги од 80 знаци. На почетокот на програмата се читаат два цели броеви:

N - бројот на низи од знаци кои ќе се читаат и
X - поместување.
Секоја од вчитаните низи од знаци треба да се трансформира на тој начин што секоја од малите и големите букви (a-z, A-Z) се заменува со истата буква поместена X места понапред во азбуката (a-z). 
Ако се надмине опсегот на буквите во азбуката, се продолжува циклично од почетокот на азбуката. Трансформираната низа да се отпечати на СИ.

Трансформацијата да се имплементира со посебна рекурзивна функција.

#include <iostream>
using namespace std;

void shiftChar(char &c, int X) {
    if (c >= 'a' && c <= 'z') c = 'a' + (c - 'a' + X) % 26;
    else if (c >= 'A' && c <= 'Z') c = 'A' + (c - 'A' + X) % 26;
}

void transformString(char s[], int X, int pos = 0) {
    if (s[pos] == '\0') return;
    shiftChar(s[pos], X);
    transformString(s, X, pos + 1);
}

int main() {
    int N, X;
    cin >> N >> X;
    cin.ignore();

    char s[100][81];
    for (int i = 0; i < N; i++) {
        cin.getline(s[i], 81);
        transformString(s[i], X);
        cout << s[i] << endl;
    }

    return 0;
}
